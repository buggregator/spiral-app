version: '3.1'

services:
  buggregator-reverse-proxy:
    image: traefik:v2.9
    command:
      - "--accesslog"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.file.directory=/configuration/"
      - "--providers.file.watch=true"
    ports:
      - ${TRAEFIC_PORT_HTTP:-80}:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.buggregator-reverse-proxy.entrypoints=web"
      - "traefik.http.routers.buggregator-reverse-proxy.rule=Host(`traefik.buggregator.localhost`)"
      - "traefik.http.services.buggregator-reverse-proxy.loadbalancer.server.port=8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - buggregator-network

  buggregator-server:
    build: "./.docker"
    ports:
      - 1025:1025
      - 9912:9912
      - 9913:9913
    environment:
      # RR_LOG_LEVEL: debug

      PERSISTENCE_DRIVER: db
      # DB_LOGGER: roadrunner
      DB_USERNAME: homestead
      DB_PASSWORD: secret
      DB_DRIVER: pgsql
      DB_HOST: buggregator-pgsql

      # Auth
      AUTH_ENABLED: false
      AUTH_PROVIDER_URL: https://${AUTH_DOMAIN}.us.auth0.com
      AUTH_CLIENT_ID: ${AUTH_CLIENT_ID}
      AUTH_CLIENT_SECRET: ${AUTH_CLIENT_SECRET}
      AUTH_CALLBACK_URL: http://buggregator.localhost/auth/sso/callback
      AUTH_SCOPES: openid,email,profile

      # Client
      CLIENT_SUPPORTED_EVENTS: http-dump,inspector,monolog,profiler,ray,sentry,smtp,var-dump
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.buggregator-http.entrypoints=web"
      - "traefik.http.routers.buggregator-http.rule=Host(`buggregator.localhost`)"
      - "traefik.http.services.buggregator-http.loadbalancer.server.port=8000"
    volumes:
      - ./app:/app/app
      - ./runtime:/app/runtime
      - ./vendor:/app/vendor
      - ./.rr-prod.yaml:/app/.rr-prod.yaml
    networks:
      - buggregator-network

  buggregator-pgsql:
    image: postgres:15
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: homestead
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: buggregator
    networks:
      - buggregator-network

  buggregator-examples:
    image: ghcr.io/buggregator/examples:latest
    environment:
      APP_ENV: production
      APP_KEY: ${APP_KEY:-base64:kMvf1mHFIuCf+ZqMiId7yo6v4oKtjuWqnlxJTWsWv7k=}
      BUGGREGATOR_URL: ${BUGGREGATOR_DEMO_URL:-http://buggregator.localhost}
      LOG_LEVEL: debug
      BROADCAST_DRIVER: log
      CACHE_DRIVER: array
      QUEUE_CONNECTION: sync
      DB_CONNECTION: pgsql
      DB_HOST: buggregator-pgsql
      DB_DATABASE: examples
      DB_USERNAME: homestead
      DB_PASSWORD: secret
      APP_URL: ${APP_URL:-http://examples.buggregator.localhost}
      MAIL_HOST: buggregator-server
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: null
      MAIL_FROM_ADDRESS: sender@site.com
      MAIL_FROM_NAME: sender
      RAY_HOST: ray@buggregator-server
      RAY_PORT: 8000
      VAR_DUMPER_SERVER: buggregator-server:9912
      SENTRY_LARAVEL_DSN: http://sentry@buggregator-server:8000/default
      LOG_SOCKET_URL: buggregator-server:9913
      LOG_SLACK_WEBHOOK_URL: http://buggregator-server:8000/slack
      INSPECTOR_URL: http://inspector@buggregator-server:8000
      INSPECTOR_API_KEY: test
      PROFILER_ENDPOINT: http://profiler@buggregator-server:8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.buggregator-examples.entrypoints=web"
      - "traefik.http.routers.buggregator-examples.rule=Host(`examples.buggregator.localhost`)"
      - "traefik.http.services.buggregator-examples.loadbalancer.server.port=8000"
    depends_on:
      - buggregator-pgsql
    networks:
      - buggregator-network

networks:
  buggregator-network:
    ipam:
      driver: default
      config:
        - subnet: 172.0.72.0/24
